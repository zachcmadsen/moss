/* automatically generated by rust-bindgen 0.69.2 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cpu {
    _unused: [u8; 0],
}
extern "C" {
    pub fn cpu_new() -> *mut cpu;
}
extern "C" {
    pub fn cpu_pc(cpu: *const cpu) -> u16;
}
extern "C" {
    pub fn cpu_set_pc(cpu: *mut cpu, pc: u16);
}
extern "C" {
    pub fn cpu_a(cpu: *const cpu) -> u8;
}
extern "C" {
    pub fn cpu_set_a(cpu: *mut cpu, a: u8);
}
extern "C" {
    pub fn cpu_x(cpu: *const cpu) -> u8;
}
extern "C" {
    pub fn cpu_set_x(cpu: *mut cpu, x: u8);
}
extern "C" {
    pub fn cpu_y(cpu: *const cpu) -> u8;
}
extern "C" {
    pub fn cpu_set_y(cpu: *mut cpu, y: u8);
}
extern "C" {
    pub fn cpu_s(cpu: *const cpu) -> u8;
}
extern "C" {
    pub fn cpu_set_s(cpu: *mut cpu, s: u8);
}
extern "C" {
    pub fn cpu_p(cpu: *const cpu) -> u8;
}
extern "C" {
    pub fn cpu_set_p(cpu: *mut cpu, p: u8);
}
extern "C" {
    pub fn cpu_read(cpu: *const cpu, addr: u16) -> u8;
}
extern "C" {
    pub fn cpu_write(cpu: *mut cpu, addr: u16, data: u8);
}
extern "C" {
    pub fn cpu_step(cpu: *mut cpu);
}
extern "C" {
    pub fn cpu_free(cpu: *mut cpu);
}
